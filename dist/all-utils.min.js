!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((r="undefined"!=typeof globalThis?globalThis:r||self).OFUtils={})}(this,function(r){"use strict";const e={parseJSON(r){if("string"!=typeof r)return console.error("Invalid input: expected a string, got",typeof r),null;if(""===r.trim())return console.error("Invalid JSON string: empty string"),null;try{return JSON.parse(r)}catch(r){return console.error("Invalid JSON string:",r.message),null}},validateJSON(r){if("string"!=typeof r)return{isValid:!1,error:"Input must be a string",parsedValue:null};try{return{isValid:!0,error:null,parsedValue:JSON.parse(r)}}catch(r){return{isValid:!1,error:r.message,parsedValue:null}}},toCSV(r){if(!r)throw new Error("输入不能为空");const e=Array.isArray(r)?r:[r];if(0===e.length)return"";const t=new Set;e.forEach(r=>{Object.keys(r).forEach(r=>t.add(r))});const n=Array.from(t),o=e.map(r=>n.map(e=>(r=>{if(null==r)return"";const e=String(r);return e.includes(",")||e.includes("\n")||e.includes('"')?`"$${e.replace(/"/g,'""')}"`:e})(r[e])).join(","));return[n.join(","),...o].join("\n")},toXML(r,e="root"){if(null==r)return console.error("[toXML] 输入不能为空"),"";const t=(r,e)=>{if("object"!=typeof r||null===r)return`<${e}>${n=r,null==n?"":String(n).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}</${e}>`;var n;if(Array.isArray(r))return 0===r.length?`<${e}/>`:r.map(r=>t(r,e)).join("");const o=Object.keys(r);if(0===o.length)return`<${e}/>`;const i=o.map(e=>t(r[e],e)).join("");return`<${e}>${i}</${e}>`};return t(r,e=e||"root")},format(r,e=2){if(null==r)throw new Error("输入不能为空");try{const t="string"==typeof r?JSON.parse(r):r;return JSON.stringify(t,null,e)}catch(r){throw new Error(`无效的JSON格式: ${r.message}`)}},minify(r){if(null==r)throw new Error("输入不能为空");try{const e="string"==typeof r?JSON.parse(r):r;return JSON.stringify(e)}catch(r){throw new Error(`无效的JSON格式: ${r.message}`)}}};r.JsonConverter=e});
