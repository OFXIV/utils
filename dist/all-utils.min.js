!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((r="undefined"!=typeof globalThis?globalThis:r||self).OFUtils={})}(this,function(r){"use strict";const e={validateJSON(r){if("string"!=typeof r)return{isValid:!1,error:"Input must be a string",parsedValue:null};try{return{isValid:!0,error:null,parsedValue:JSON.parse(r)}}catch(r){return{isValid:!1,error:r.message,parsedValue:null}}},toCSV(r){if(!r)throw new Error("输入不能为空");const e=Array.isArray(r)?r:[r];if(0===e.length)return"";const t=new Set;e.forEach(r=>{Object.keys(r).forEach(r=>t.add(r))});const n=Array.from(t),o=e.map(r=>n.map(e=>(r=>{if(null==r)return"";const e=String(r);return e.includes(",")||e.includes("\n")||e.includes('"')?`"$${e.replace(/"/g,'""')}"`:e})(r[e])).join(","));return[n.join(","),...o].join("\n")},toXML(r,e="root"){if(!r)throw new Error("输入不能为空");const t=(r,e)=>{if("object"!=typeof r||null===r)return`<${e}>${n=r,null==n?"":String(n).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}</${e}>`;var n;if(Array.isArray(r))return r.map(r=>t(r,e)).join("");let o=`<${e}>`;for(const e in r)Object.prototype.hasOwnProperty.call(r,e)&&(o+=t(r[e],e));return o+=`</${e}>`,o};return t(r,e)},toYAML(r,e=2){if(!r)throw new Error("输入不能为空");const t=(r,n=0)=>{const o=" ".repeat(n);if("object"!=typeof r||null===r)return`${String(r)}`;if(Array.isArray(r))return r.map(r=>{const i=t(r,n+e);return`${o}- ${i.trim()}`}).join("\n");let i="";for(const s in r)if(Object.prototype.hasOwnProperty.call(r,s)){const a=r[s];i+="object"==typeof a&&null!==a?`${o}${s}:\n${t(a,n+e)}\n`:`${o}${s}: ${String(a)}\n`}return i};return t(r)},format(r,e=2){if(null==r)throw new Error("输入不能为空");try{const t="string"==typeof r?JSON.parse(r):r;return JSON.stringify(t,null,e)}catch(r){throw new Error(`无效的JSON格式: ${r.message}`)}},minify(r){if(null==r)throw new Error("输入不能为空");try{const e="string"==typeof r?JSON.parse(r):r;return JSON.stringify(e)}catch(r){throw new Error(`无效的JSON格式: ${r.message}`)}}};r.JsonConverter=e});
