!function(r,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(r="undefined"!=typeof globalThis?globalThis:r||self).OFUtils=t()}(this,function(){"use strict";return{toCSV(r){if(!r)throw new Error("输入不能为空");const t=Array.isArray(r)?r:[r];if(0===t.length)return"";const e=new Set;t.forEach(r=>{Object.keys(r).forEach(r=>e.add(r))});const n=Array.from(e),o=t.map(r=>n.map(t=>(r=>{if(null==r)return"";const t=String(r);return t.includes(",")||t.includes("\n")||t.includes('"')?`"$${t.replace(/"/g,'""')}"`:t})(r[t])).join(","));return[n.join(","),...o].join("\n")},toXML(r,t="root"){if(!r)throw new Error("输入不能为空");const e=(r,t)=>{if("object"!=typeof r||null===r)return`<${t}>${n=r,null==n?"":String(n).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}</${t}>`;var n;if(Array.isArray(r))return r.map(r=>e(r,t)).join("");let o=`<${t}>`;for(const t in r)Object.prototype.hasOwnProperty.call(r,t)&&(o+=e(r[t],t));return o+=`</${t}>`,o};return e(r,t)},toYAML(r,t=2){if(!r)throw new Error("输入不能为空");const e=(r,n=0)=>{const o=" ".repeat(n);if("object"!=typeof r||null===r)return`${String(r)}`;if(Array.isArray(r))return r.map(r=>{const i=e(r,n+t);return`${o}- ${i.trim()}`}).join("\n");let i="";for(const s in r)if(Object.prototype.hasOwnProperty.call(r,s)){const c=r[s];i+="object"==typeof c&&null!==c?`${o}${s}:\n${e(c,n+t)}\n`:`${o}${s}: ${String(c)}\n`}return i};return e(r)},format(r,t=2){if(null==r)throw new Error("输入不能为空");try{const e="string"==typeof r?JSON.parse(r):r;return JSON.stringify(e,null,t)}catch(r){throw new Error(`无效的JSON格式: ${r.message}`)}},minify(r){if(null==r)throw new Error("输入不能为空");try{const t="string"==typeof r?JSON.parse(r):r;return JSON.stringify(t)}catch(r){throw new Error(`无效的JSON格式: ${r.message}`)}}}});
